@using Microsoft.EntityFrameworkCore @* ToListAsync extension method *@
@using Northwind.BlazorServer.Data
@page "/customers/{country?}"
@inject INorthwindService service
<h3>
	Customers@(string.IsNullOrWhiteSpace(Country) ? " Worldwide" : " in "
		+ Country)
</h3>

<div class="form-group">
	<a class="btn btn-info" href="createcustomer">
		<i class="oi oi-plus"></i> Create New
	</a>
</div>

@if (customers == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<table class="table">
		<thead>
			<tr>
				<th>Id</th>
				<th>Company Name</th>
				<th>Address</th>
				<th>Phone</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (Customer c in customers)
			{
				<tr>
					<td>@c.CustomerId</td>
					<td>@c.CompanyName</td>
					<td>
						@c.Address<br />
						@c.City<br />
						@c.PostalCode<br />
						@c.Country
					</td>
					<td>@c.Phone</td>
					<td>
						<a class="btn btn-info" href="editcustomer/@c.CustomerId">
							<i class="oi oi-pencil"></i>
						</a>
						<a class="btn btn-danger"
						   href="deletecustomer/@c.CustomerId">
							<i class="oi oi-trash"></i>
						</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
}

@code {
	[Parameter]
	public string? Country { get; set; }
	private IEnumerable<Customer>? customers;
	private bool isLoading = false; // Флаг загрузки
	protected override async Task OnParametersSetAsync()
	{
		if (isLoading) return; // Если уже идёт загрузка, не начинаем новую операцию
		isLoading = true; // Устанавливаем флаг загрузки
		try
		{
			if (string.IsNullOrWhiteSpace(Country))
			{
				customers = await service.GetCustomersAsync();
			}
			else
			{
				customers = await service.GetCustomersAsync(Country);
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.Message);
		}
		finally
		{
			isLoading = false; // Сбрасываем флаг загрузки
		}
	}
	}
}
